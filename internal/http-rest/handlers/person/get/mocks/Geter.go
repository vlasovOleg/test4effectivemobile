// Code generated by mockery v2.28.2. DO NOT EDIT.

package mocks

import (
	model "test4effectivemobile/internal/model"

	mock "github.com/stretchr/testify/mock"
)

// Geter is an autogenerated mock type for the Geter type
type Geter struct {
	mock.Mock
}

// Get provides a mock function with given fields: f
func (_m *Geter) Get(f model.Filter) ([]model.Person, error) {
	ret := _m.Called(f)

	var r0 []model.Person
	var r1 error
	if rf, ok := ret.Get(0).(func(model.Filter) ([]model.Person, error)); ok {
		return rf(f)
	}
	if rf, ok := ret.Get(0).(func(model.Filter) []model.Person); ok {
		r0 = rf(f)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.Person)
		}
	}

	if rf, ok := ret.Get(1).(func(model.Filter) error); ok {
		r1 = rf(f)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewGeter interface {
	mock.TestingT
	Cleanup(func())
}

// NewGeter creates a new instance of Geter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGeter(t mockConstructorTestingTNewGeter) *Geter {
	mock := &Geter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
