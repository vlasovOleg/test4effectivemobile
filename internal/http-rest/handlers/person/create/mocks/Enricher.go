// Code generated by mockery v2.28.2. DO NOT EDIT.

package mocks

import (
	model "test4effectivemobile/internal/model"

	mock "github.com/stretchr/testify/mock"
)

// Enricher is an autogenerated mock type for the Enricher type
type Enricher struct {
	mock.Mock
}

// Enrich provides a mock function with given fields: p
func (_m *Enricher) Enrich(p model.Person) (model.Person, error) {
	ret := _m.Called(p)

	var r0 model.Person
	var r1 error
	if rf, ok := ret.Get(0).(func(model.Person) (model.Person, error)); ok {
		return rf(p)
	}
	if rf, ok := ret.Get(0).(func(model.Person) model.Person); ok {
		r0 = rf(p)
	} else {
		r0 = ret.Get(0).(model.Person)
	}

	if rf, ok := ret.Get(1).(func(model.Person) error); ok {
		r1 = rf(p)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewEnricher interface {
	mock.TestingT
	Cleanup(func())
}

// NewEnricher creates a new instance of Enricher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewEnricher(t mockConstructorTestingTNewEnricher) *Enricher {
	mock := &Enricher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
